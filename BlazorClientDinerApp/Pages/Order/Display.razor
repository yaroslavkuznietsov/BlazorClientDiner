@page "/Order/Display/{Id:int}"
@inject HttpClient Http
@inject NavigationManager navigationManager

<h3>Display</h3>

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <h4>System Error</h4>
    <p>@errorString</p>
}
else if (orderInfo.Order is null)
{
    <h4>Loading...</h4>
}
else
{
    <table class="table">
        <tbody>
            <tr>
                <td><strong>Order Name</strong></td>
                <td>@orderInfo.Order.OrderName</td>
            </tr>
            <tr>
                <td><strong>Order Date</strong></td>
                <td>@orderInfo.Order.OrderDate</td>
            </tr>
            <tr>
                <td><strong>Order Total</strong></td>
                <td>@string.Format("{0:C}", orderInfo.Order.Total)</td>
            </tr>
            <tr>
                <td><strong>Item Ordered</strong></td>
                <td>@orderInfo.ItemPurchased</td>
            </tr>
            <tr>
                <td><strong>Quantity Ordered</strong></td>
                <td>@orderInfo.Order.Quantity</td>
            </tr>
        </tbody>
    </table>
}



@code {
    [Parameter]
    public int Id { get; set; }

    private OrderResultModel orderInfo = new OrderResultModel();
    private string errorString;

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await Http.GetAsync($"api/order/{Id}");

        if (response.IsSuccessStatusCode)
        {
            orderInfo = await response.Content.ReadFromJsonAsync<OrderResultModel>();
        }
        else
        {
            errorString = response.ReasonPhrase;
        }
    }
}
